func (t *{{ .Name }}) Unmarshal(decoder *protocol.Decoder) error {
  var err error
{{- range $i, $f := .Fields | forVersion .Version }}
{{- if .Type | isPrimitiveArray }}

  t.{{ $f.Name }}, err = decoder.{{ $f.Type | baseType | capitalize }}Array()
  if err != nil {
  	return err
  }
{{- end }}
{{- if .Type | isStructArray }}

  // {{ $f.Name }}
  if n, err := decoder.ArrayLength(); err != nil {
    return err
  } else if n >= 0 {
    t.{{ $f.Name }} = make({{ $f.Type }}, n)
    for i := 0; i < n; i++ {
      var item {{ $f.Type | baseType }}
      if err := (&item).Unmarshal(decoder); err != nil {
        return err
      }
      t.{{ $f.Name }}[i] = item
    }
  }
{{- end }}
{{- if $f.Type | isArray | not }}

  t.{{ $f.Name }}, err = decoder.{{ $f.Type | capitalize }}()
  if err != nil {
    return err
  }
{{- end }}
{{- end }}

  return err
}